
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  contact: 'contact',
  location: 'location',
  personalWebsite: 'personalWebsite',
  githubProfile: 'githubProfile',
  githubId: 'githubId',
  githubAccessToken: 'githubAccessToken',
  latestRepo: 'latestRepo'
};

exports.Prisma.SocialScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  websiteName: 'websiteName',
  url: 'url'
};

exports.Prisma.EducationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  college: 'college',
  field: 'field',
  startDate: 'startDate',
  endDate: 'endDate',
  completed: 'completed',
  expectedEndDate: 'expectedEndDate',
  GPA: 'GPA',
  CGPA: 'CGPA',
  description: 'description'
};

exports.Prisma.ApplicationScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  userId: 'userId',
  status: 'status',
  matchedPercentage: 'matchedPercentage'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  skills: 'skills'
};

exports.Prisma.ExperienceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  company: 'company',
  role: 'role',
  startDate: 'startDate',
  endDate: 'endDate',
  description: 'description'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate'
};

exports.Prisma.ProjectLinkScalarFieldEnum = {
  id: 'id',
  type: 'type',
  projectId: 'projectId'
};

exports.Prisma.ResumeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  generatedAt: 'generatedAt',
  data: 'data'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  location: 'location',
  salary: 'salary',
  hrId: 'hrId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HRScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchedScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  matchedAt: 'matchedAt'
};

exports.Prisma.KvPairScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  matchedPercentage: 'matchedPercentage',
  matchedId: 'matchedId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.LinkType = exports.$Enums.LinkType = {
  SOURCE_CODE: 'SOURCE_CODE',
  DEMO: 'DEMO',
  WEBSITE: 'WEBSITE',
  TESTIMONIAL: 'TESTIMONIAL'
};

exports.Degree = exports.$Enums.Degree = {
  BACHELORS: 'BACHELORS',
  MASTERS: 'MASTERS',
  BACHELORS_RUNNING: 'BACHELORS_RUNNING',
  MASTERS_RUNNING: 'MASTERS_RUNNING'
};

exports.Prisma.ModelName = {
  User: 'User',
  Social: 'Social',
  Education: 'Education',
  Application: 'Application',
  Skill: 'Skill',
  Experience: 'Experience',
  Project: 'Project',
  ProjectLink: 'ProjectLink',
  Resume: 'Resume',
  Job: 'Job',
  HR: 'HR',
  Matched: 'Matched',
  KvPair: 'KvPair'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/sarthakgc/hackathon/backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/sarthakgc/hackathon/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  userId    String  @id @default(uuid())\n  firstName String?\n  lastName  String?\n  email     String?\n  contact   String?\n  location  String?\n\n  personalWebsite   String?\n  githubProfile     String  @unique\n  githubId          String? @unique\n  githubAccessToken String? @unique\n\n  socials    Social[]\n  latestRepo String?\n\n  applications Application[]\n  education    Education[]\n  skills       Skill[]\n  experiences  Experience[]\n  projects     Project[]\n  resume       Resume[]\n}\n\nmodel Social {\n  id     String @id @default(uuid())\n  userId String\n\n  websiteName String\n  url         String\n  User        User   @relation(fields: [userId], references: [userId])\n}\n\nmodel Education {\n  id              String    @id @default(uuid())\n  userId          String\n  college         String\n  field           String\n  startDate       DateTime?\n  endDate         DateTime?\n  completed       Boolean?\n  expectedEndDate DateTime?\n  GPA             String?\n  CGPA            String?\n\n  description String?\n\n  user User @relation(fields: [userId], references: [userId])\n}\n\nmodel Application {\n  id                String            @id @default(uuid()) // Unique ID, generated as a UUID\n  jobId             String\n  userId            String\n  status            ApplicationStatus @default(pending)\n  matchedPercentage Float\n\n  job  Job  @relation(fields: [jobId], references: [id])\n  user User @relation(fields: [userId], references: [userId])\n}\n\nenum ApplicationStatus {\n  pending\n  approved\n  rejected\n}\n\nmodel Skill {\n  id     String   @id @default(uuid())\n  userId String\n  title  String\n  skills String[]\n\n  // projectId Project[]\n  user User @relation(fields: [userId], references: [userId])\n}\n\nmodel Experience {\n  id          String    @id @default(uuid())\n  userId      String\n  company     String\n  role        String\n  startDate   DateTime\n  endDate     DateTime?\n  description String?\n\n  user User @relation(fields: [userId], references: [userId])\n}\n\nmodel Project {\n  id          String        @id @default(uuid())\n  userId      String\n  title       String\n  description String\n  links       ProjectLink[]\n  startDate   DateTime\n  endDate     DateTime?\n  // skills      Skill[]\n\n  user User @relation(fields: [userId], references: [userId])\n}\n\nmodel ProjectLink {\n  id        String   @id @default(uuid())\n  type      LinkType\n  projectId String\n  Project   Project  @relation(fields: [projectId], references: [id])\n}\n\nenum LinkType {\n  SOURCE_CODE\n  DEMO\n  WEBSITE\n  TESTIMONIAL\n}\n\nmodel Resume {\n  id          String   @id @default(uuid())\n  userId      String\n  generatedAt DateTime @default(now())\n  data        String\n\n  user User @relation(fields: [userId], references: [userId])\n}\n\nenum Degree {\n  BACHELORS\n  MASTERS\n  BACHELORS_RUNNING\n  MASTERS_RUNNING\n}\n\nmodel Job {\n  id           String        @id @default(uuid())\n  title        String\n  description  String\n  location     String?\n  salary       Float?\n  hr           HR            @relation(fields: [hrId], references: [id])\n  hrId         String\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n  matched      Matched[]\n  applications Application[]\n}\n\nmodel HR {\n  id        String   @id @default(uuid())\n  email     String   @unique\n  password  String\n  jobs      Job[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Matched {\n  id        String   @id @default(uuid())\n  jobId     String\n  job       Job      @relation(fields: [jobId], references: [id])\n  userIds   KvPair[]\n  matchedAt DateTime @default(now())\n}\n\nmodel KvPair {\n  id                String  @id @default(uuid())\n  userId            String\n  matchedPercentage Float\n  Matched           Matched @relation(fields: [matchedId], references: [id])\n  matchedId         String\n}\n\n// model Matched {\n//   id        String   @id @default(uuid())\n//   jobId     String\n//   job       Job      @relation(fields: [jobId], references: [id])\n//   userIds   String[]\n//   matchedAt DateTime @default(now())\n// }\n",
  "inlineSchemaHash": "79f8944eb4685210756caa18738170cb00459b534db9805a23f60c3eba7a4a00",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"personalWebsite\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubProfile\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubAccessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socials\",\"kind\":\"object\",\"type\":\"Social\",\"relationName\":\"SocialToUser\"},{\"name\":\"latestRepo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToUser\"},{\"name\":\"education\",\"kind\":\"object\",\"type\":\"Education\",\"relationName\":\"EducationToUser\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToUser\"},{\"name\":\"experiences\",\"kind\":\"object\",\"type\":\"Experience\",\"relationName\":\"ExperienceToUser\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToUser\"},{\"name\":\"resume\",\"kind\":\"object\",\"type\":\"Resume\",\"relationName\":\"ResumeToUser\"}],\"dbName\":null},\"Social\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SocialToUser\"}],\"dbName\":null},\"Education\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"college\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expectedEndDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"GPA\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CGPA\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EducationToUser\"}],\"dbName\":null},\"Application\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"matchedPercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"ApplicationToJob\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApplicationToUser\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillToUser\"}],\"dbName\":null},\"Experience\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExperienceToUser\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"links\",\"kind\":\"object\",\"type\":\"ProjectLink\",\"relationName\":\"ProjectToProjectLink\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectToUser\"}],\"dbName\":null},\"ProjectLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"LinkType\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectLink\"}],\"dbName\":null},\"Resume\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResumeToUser\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"hr\",\"kind\":\"object\",\"type\":\"HR\",\"relationName\":\"HRToJob\"},{\"name\":\"hrId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"matched\",\"kind\":\"object\",\"type\":\"Matched\",\"relationName\":\"JobToMatched\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"Application\",\"relationName\":\"ApplicationToJob\"}],\"dbName\":null},\"HR\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"HRToJob\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Matched\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToMatched\"},{\"name\":\"userIds\",\"kind\":\"object\",\"type\":\"KvPair\",\"relationName\":\"KvPairToMatched\"},{\"name\":\"matchedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"KvPair\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matchedPercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"Matched\",\"kind\":\"object\",\"type\":\"Matched\",\"relationName\":\"KvPairToMatched\"},{\"name\":\"matchedId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

